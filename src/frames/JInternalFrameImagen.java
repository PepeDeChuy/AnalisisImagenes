/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author peper
 */
public class JInternalFrameImagen extends javax.swing.JInternalFrame 
{
    private Image imagenOriginal;
    public BufferedImage bufferimagen;
    private Image imagenSecundaria;
    private JFramePrincipal JFP;
    /**
     * Creates new form JInternalFrameImagen
     */
    
    public JInternalFrameImagen(JInternalFrameImagen JFI) 
    {
        this.imagenOriginal = JFI.imagenOriginal;
        this.bufferimagen = JFI.bufferimagen;
        this.imagenSecundaria = JFI.imagenSecundaria;
        this.JFP = JFI.JFP;
    }
    
    public JInternalFrameImagen() 
    {
        initComponents();
        Image aux = openImage();
        this.imagenOriginal = aux;
        setImagen(aux);
    }
    
    public JInternalFrameImagen(Image aux) 
    {
        initComponents();
        this.imagenOriginal = aux;
        setImagen(aux);
    }
    
    public void setImagen(Image nuevaImagen)
    {
        imagenSecundaria = nuevaImagen;
        jLabel1.removeAll();
        jLabel1.setIcon(new ImageIcon(this.getImagenSecundaria()));
        setSize(this.imagenSecundaria.getWidth(null),this.imagenSecundaria.getHeight(null) + 57);
    }
    
    public static Image openImage()
    {
        try 
        {
            // definir los filtros para lectura
            FileNameExtensionFilter filtro =
                    new FileNameExtensionFilter("Imagenes","jpg","jpeg","png","bmp");
            // crear un selector de archivos
            JFileChooser selector = new JFileChooser();
            selector.setCurrentDirectory(new File("./"));
            // agregar el filtro al selector
            selector.addChoosableFileFilter(filtro);
            // especificar que solo se puedan abrir archivos
            selector.setFileSelectionMode(JFileChooser.FILES_ONLY);
            
            //ejecutar el selector de imagenes
            
            int res = selector.showOpenDialog(null);
            
            if (res == 1 ){
                
                return null;
                
            }
            
            File archivo = selector.getSelectedFile();
            
            BufferedImage  bi = ImageIO.read(archivo);
            
            return toImage(bi);
        } catch (IOException ex) {
            //Logger.getLogger(ImageManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public static Image toImage(BufferedImage bi)
    {
        return bi.getScaledInstance(bi.getWidth(),bi.getHeight(), BufferedImage.TYPE_INT_RGB);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(890, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(545, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("jLabelImagen");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the imagenSecundaria
     */
    public Image getImagenSecundaria() 
    {
        return imagenSecundaria;
    }

    /**
     * @return the JFP
     */
    public JFramePrincipal getJFP() {
        return JFP;
    }

    /**
     * @param JFP the JFP to set
     */
    public void setJFP(JFramePrincipal JFP) {
        this.JFP = JFP;
    }
}
